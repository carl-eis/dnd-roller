{"version":3,"sources":["components/advanced-table/index.tsx","components/current-roll/styles.ts","components/current-roll/helpers/calculate-point-value/index.ts","components/current-roll/index.tsx","components/select-field/index.tsx","components/stats-display/styles.ts","components/stats-display/index.tsx","pages/home/styles/index.ts","pages/home/component.tsx","pages/home/index.ts","actions/index.ts","core/router/index.tsx","core/constants/index.ts","helpers/roll-dice/index.ts","helpers/roll-stat-block/index.ts","modules/dice-reducer.ts","core/reducer.ts","core/config.ts","core/store.ts","core/app/index.tsx","core/serviceWorker.ts","index.tsx","assets/abilityscore.svg","assets/background.jpg"],"names":["AdvancedTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","gridApi","onGridReady","bind","assertThisInitialized","params","api","sizeColumnsToFit","_this$props","columns","rowData","react_default","a","createElement","className","style","height","maxHeight","minHeight","width","main","columnDefs","animateRows","Component","StatsBlock","styled","div","withConfig","displayName","componentId","concat","backgroundSvg","join","StatsRow","calculate_point_value","oldVal","num","splitNumbers","toString","split","map","n","parseInt","length","_splitNumbers","slicedToArray","wholeNumber","roundDown","CurrentRoll","state","name","stat","key","calculatePointValue","_this2","currentRolls","keys","index","parsedKey","getName","renderBlock","ComponentName","handleChange","event","onChange","target","value","data","label","_this$props$styles","styles","FormControl_default","objectSpread","display","flex","InputLabel_default","htmlFor","Select_default","item","MenuItem_default","Row","_ref","even","TablePositioner","PageInnerContent","ButtonsContainer","PageWrapper","PageContainer","background","SelectFieldWrapper","HomePage","rolls","ruleOptions","selectedRule","getDisplayRolls","statRolls","computedStatBlock","sort","b","average","round","reduce","total","current","defaultColumnSettings","sortable","resizable","filter","lockPosition","statColumns","range","headerName","field","otherColumns","toConsumableArray","clearAllRolls","rollStats","rulesetOptions","selectedRulesetId","switchRule","getColumns","displayRolls","Button_default","variant","color","onClick","select_field_ComponentName","maxWidth","current_roll_CurrentRoll","advanced_table","connect","_state$diceReducer","diceReducer","ruleSets","selectedRuleset","dispatch","type","amount","arguments","undefined","rule","router","BrowserRouter","basename","Switch","Route","component","exact","path","RULESETS","ROLL_3","dice","sets","discardDice","discardSets","ROLL_3_DISCARD_SET","ROLL_4_DISCARD_1","roll_dice","Math","floor","random","numericSort","addNumbers","acc","dropLowest","arr","sorted","slice","roll_stat_block","rolledSet","diceAmount","dropAmount","rollDice","rollSingleStat","initialState","dice_reducer","action","rollAmount","statBlock","rollStatBlock","id","generate","defineProperty","rootReducer","core_reducer","history","combineReducers","connectRouter","encryptor","createEncryptor","secretKey","onError","localStorage","clear","window","location","reload","persistConfig","storage","blacklist","transforms","throttle","createBrowserHistory","logger","createLogger","collapsed","level","composeEnhancers","composeWithDevTools","getStore","reducer","storeMode","createStore","applyMiddleware","routerMiddleware","mode","createRootReducer","persistedReducer","persistReducer","store","persistor","persistStore","configureStore","App","es","integration_react","loading","esm","Boolean","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8ccd467c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\ninterface ITableColumn {\n  headerName: string;\n  field: string;\n}\n\ninterface IProps {\n  columns: ITableColumn[];\n  rowData: any[];\n}\n\nclass AdvancedTable extends Component<IProps> {\n  private gridApi: any;\n\n  constructor(props) {\n    super(props);\n\n    this.onGridReady = this.onGridReady.bind(this);\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridApi.sizeColumnsToFit();\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { columns, rowData } = this.props;\n    return (\n      <div\n        className=\"ag-theme-balham\"\n        style={{\n          height: 'auto',\n          maxHeight: '580px',\n          minHeight: '300px',\n          width: '100%',\n        }}\n      >\n        <AgGridReact\n          columnDefs={columns}\n          rowData={rowData}\n          animateRows={true}\n          onGridReady={this.onGridReady}\n        >\n        </AgGridReact>\n      </div>\n    );\n  }\n}\n\nexport default AdvancedTable;\n","import styled from 'styled-components';\nimport backgroundSvg from '~/assets/abilityscore.svg';\n\n\nexport const StatsBlock = (styled.div)`\n  background: ${\n    [\n      'center',\n      'center',\n      'transparent',\n      `url(${backgroundSvg})`,\n    ].join(' ')\n  };\n  background-size: contain;\n  height: 78px;\n  width: 66px;\n\n  .heading {\n    padding-top: 8px;\n    height: 24px;\n    width: 100%;\n    font-size: 12px;\n    line-height: 12px;\n    text-align: center;\n    font-family: Roboto,Helvetica,sans-serif;\n    box-sizing: border-box;\n  }\n\n  .primary {\n    height: 30px;\n    width: 100%;\n    font-size: 22px;\n    line-height: 22px;\n    font-weight: 500;\n    text-align: center;\n    font-family: Roboto,Helvetica,sans-serif;\n    box-sizing: border-box;\n  }\n\n  .secondary {\n    height: 22px;\n    width: 100%;\n    font-family: Roboto,Helvetica,sans-serif;\n    box-sizing: border-box;\n    text-align: center;\n  }\n`;\n\nexport const StatsRow = (styled.div)<any>`\n  height: auto;\n  margin: 0.5rem 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n\n  ${StatsBlock} {\n    margin: 0.25rem 1rem 0.25rem 0;\n  }\n`;\n","const roundDown = (num: number): number => {\n  const splitNumbers: number[] = num.toString().split('.').map(n => parseInt(n, 10));\n  if (splitNumbers.length < 1) return num;\n  const [wholeNumber, fractionNumber] = splitNumbers;\n  const isNegative: boolean = num < 0;\n  return (fractionNumber >= 0 && isNegative) ? wholeNumber - 1 : wholeNumber;\n};\n\nexport default (oldVal: string): string => {\n  const parsedVal: number = parseInt(oldVal, 10);\n  const calVal: number = (parsedVal - 10) / 2;\n  return roundDown(calVal).toString();\n};\n","import React, { Component } from 'react';\nimport {\n  StatsBlock,\n  StatsRow\n} from './styles';\nimport { calculatePointValue } from './helpers';\n\nconst getName = (key: string) => {\n  const parsedKey = parseInt(key, 10);\n  if (!!parsedKey || parsedKey === 0) return `Stat ${(parsedKey + 1).toString()}`;\n  return key;\n};\n\ninterface IProps {\n  currentRolls: number[];\n}\n\ninterface IState {\n  [x: string]: any;\n}\n\nexport default class CurrentRoll extends Component<IProps, IState> {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderBlock(name: string, stat: string, key: any) {\n    return (\n      <StatsBlock key={key}>\n        <div className=\"heading\">\n          {name}\n        </div>\n        <div className=\"primary\">\n          {stat}\n        </div>\n        <div className=\"secondary\">\n          {calculatePointValue(stat)}\n        </div>\n      </StatsBlock>\n    );\n  }\n\n  render() {\n    const { currentRolls } = this.props;\n    if (!currentRolls) return null;\n    return (\n      <StatsRow>\n        {Object.keys(currentRolls).map((key, index) => {\n          const name: string = getName(key);\n          return this.renderBlock(name, currentRolls[key], index);\n        })}\n      </StatsRow>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\ninterface IDropdownData {\n  key: string;\n  value: string;\n}\n\ninterface IProps {\n  label: string;\n  data: IDropdownData[];\n  value: any;\n  onChange: (...args) => void;\n  styles?: object;\n}\n\ninterface IState {\n  [x: string]: any;\n}\n\nexport default class ComponentName extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { onChange } = this.props;\n    const { target: { value } } = event;\n    onChange(value);\n  }\n\n  render() {\n    const { value, data, label, styles = {} } = this.props;\n    return (\n      <FormControl style={{\n        display: 'flex',\n        flex: '1 1 auto',\n        ...styles,\n      }}>\n        <InputLabel htmlFor=\"age-simple\">{label}</InputLabel>\n        <Select\n          value={value}\n          onChange={this.handleChange}\n        >\n          {data.map(item => (\n            <MenuItem value={item.key}>{item.value}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const StyledComponent = (styled.div)<any>`\n\n`;\n","import React, { Component } from 'react';\nimport {} from './styles';\n\ninterface IProps {\n  totalRolls: number;\n  totalStatRolls: number;\n  averageSingleRoll: number;\n}\n\ninterface IState {\n  [x: string]: any;\n}\n\nexport default class ComponentName extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      totalRolls,\n      totalStatRolls,\n      averageSingleRoll,\n    } = this.props;\n\n    return (\n      <div>\n        <h3>Total Stat Rolls: {totalStatRolls}</h3>\n        <h3>Total Dice Rolls: {totalRolls}</h3>\n        <h3>Average Single Roll: {averageSingleRoll.toFixed(2)}</h3>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components';\nimport background from '~/assets/background.jpg';\n\nexport const Row = (styled.div)<{ even?: boolean }>`\n  display: flex;\n  // flex: 1 1 auto;\n  flex-direction: row;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  ${({ even }) => even ? 'justify-content: space-between;' : ''}\n  flex-wrap: wrap;\n`;\n\nexport const TablePositioner = (styled.div)<any>`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  justify-content: flex-start;\n  position: relative;\n  margin-top: 1rem;\n`;\n\nexport const PageInnerContent = (styled.div)<any>`\n  flex: 1;\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ButtonsContainer = (styled.div)<any>`\n  & button {\n    margin: 0.5rem 0.5rem 0 0;\n  }\n\n  &:first-child > button {\n    margin-left: 0;\n  }\n`;\n\nexport const PageWrapper = (styled.div)<any>`\n  background-color: rgba(255,255,255,0.8);\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  max-width: 60vw;\n  margin: 3rem 0;\n  padding: 2rem;\n  border-radius: 0.25rem;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n  // overflow-y: scroll;\n`;\n\nexport const PageContainer = (styled.div)<any>`\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  width: 100%;\n  height: 100vh;\n  justify-content: center;\n  box-sizing: border-box;\n  background: url(${background});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: fixed;\n`;\n\nexport const SelectFieldWrapper = styled.div<any>`\n  flex: 1 1 100%;\n  margin: 0.75rem 0;\n`;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { range } from 'lodash';\nimport { round } from 'mathjs';\n\nimport AdvancedTable from '~/components/advanced-table';\nimport { CurrentRoll, SelectField } from '~/components';\nimport { IStatRolls } from '~/modules/dice-reducer';\nimport { IDiceRuleset } from '~/core/constants';\n\nimport { ButtonsContainer, PageContainer, PageInnerContent, PageWrapper, Row, SelectFieldWrapper, TablePositioner } from './styles';\n\ninterface IProps {\n  [x: string]: any;\n}\n\ninterface IContainerProps {\n  clearAllRolls: () => void;\n  rollStats: (amount: number) => void;\n  selectedRuleset: IDiceRuleset;\n  selectedRulesetId: string;\n  statRolls: IStatRolls;\n  switchRule: (rule: string) => void;\n  rulesetOptions: Array<{ key: string; value: string }>;\n}\n\ntype IAllProps = IProps & IContainerProps;\n\ninterface IRuleOption {\n  value: string;\n  key: string;\n}\n\ninterface IState {\n  rolls: number[][][];\n  ruleOptions: IRuleOption[];\n  selectedRule: string;\n}\n\nexport default class HomePage extends Component<IAllProps, IState> {\n  state = {\n    rolls: [],\n    ruleOptions: [],\n    selectedRule: '',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.getDisplayRolls = this.getDisplayRolls.bind(this);\n  }\n\n  getDisplayRolls() {\n    const { statRolls } = this.props;\n    return Object.keys(statRolls).map((key: string) => {\n      const statRow = statRolls[key];\n      const computedStatBlock: number[] = statRow.sort((a, b) => b - a);\n      const average = round(computedStatBlock.reduce((total, current) => total + current) / 6, 2);\n      return {\n        ...computedStatBlock,\n        average,\n      };\n    });\n  }\n\n  getColumns() {\n    const defaultColumnSettings = {\n      sortable: true,\n      resizable: true,\n      filter: true,\n      lockPosition: true,\n    };\n    const statColumns = range(0, 6).map(item => ({\n      headerName: `Stat ${item + 1}`,\n      field: item.toString(),\n      ...defaultColumnSettings,\n    }));\n    const otherColumns = [{\n      headerName: 'Average',\n      field: 'average',\n      ...defaultColumnSettings,\n    }];\n    return [\n      ...statColumns,\n      ...otherColumns,\n    ];\n  }\n\n  render() {\n    const {\n      clearAllRolls,\n      rollStats,\n      rulesetOptions,\n      selectedRulesetId,\n      switchRule,\n    } = this.props;\n    const columns = this.getColumns();\n    const displayRolls = this.getDisplayRolls();\n\n    return (\n      <PageContainer>\n        <PageWrapper>\n          <PageInnerContent>\n            <Row>\n            </Row>\n            <Row even>\n              <div>\n                <h1>Really fair dice roller</h1>\n                <ButtonsContainer>\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => rollStats(1)}>\n                    ROLL!\n                  </Button>\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => rollStats(100)}>\n                    ROLL 100!\n                  </Button>\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => clearAllRolls()}>\n                    CLEAR!\n                  </Button>\n                </ButtonsContainer>\n              </div>\n            </Row>\n            <Row>\n              <SelectFieldWrapper>\n                <SelectField\n                  onChange={switchRule}\n                  value={selectedRulesetId}\n                  data={rulesetOptions}\n                  label={'Rolling rule'}\n                  styles={{ maxWidth: '250px' }}\n                />\n              </SelectFieldWrapper>\n            </Row>\n            <Row>\n              <CurrentRoll currentRolls={displayRolls[displayRolls.length - 1]}/>\n            </Row>\n            <TablePositioner>\n              <AdvancedTable\n                columns={columns}\n                rowData={displayRolls}\n              />\n            </TablePositioner>\n          </PageInnerContent>\n        </PageWrapper>\n      </PageContainer>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { IApplicationState } from '~/core/reducer';\nimport { clearAllRolls, rollStats, switchRule } from '~/actions';\nimport HomePage from './component';\n\nexport const mapStateToProps = (state: IApplicationState) => {\n  const {\n    diceReducer: {\n      statRolls,\n      selectedRule,\n      ruleSets,\n    },\n  } = state;\n\n  const rulesetOptions = Object.keys(ruleSets).map((item) => {\n    const currentItem = ruleSets[item];\n    return {\n      key: item,\n      value: currentItem.name,\n    };\n  });\n\n  return {\n    rulesetOptions,\n    selectedRuleset: ruleSets[selectedRule],\n    selectedRulesetId: selectedRule,\n    statRolls,\n  };\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  clearAllRolls() {\n    dispatch(clearAllRolls());\n  },\n  rollStats(amount: number) {\n    dispatch(rollStats(amount));\n  },\n  switchRule(rule: string) {\n    dispatch(switchRule(rule));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","export const SWITCH_RULE = 'SWITCH_RULE';\nexport const ROLL_STATS = 'ROLL_STATS';\nexport const SELECT_STAT_BLOCK = 'SELECT_STAT_BLOCK';\nexport const CLEAR_ALL_ROLLS = 'CLEAR_ALL_ROLLS';\n\nexport const switchRule = (ruleName: string) => ({\n  type: SWITCH_RULE, data: ruleName,\n});\n\nexport const rollStats = (amount: number = 1) => ({\n  type: ROLL_STATS, data: amount,\n});\n\nexport const selectStatBlock = (id: string) => ({\n  type: SELECT_STAT_BLOCK, data: id,\n});\n\nexport const clearAllRolls = () => ({\n  type: CLEAR_ALL_ROLLS,\n});\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HomePage } from '~/pages';\n\nexport default () => (\n  <Router\n    basename={'/dnd-roller'}\n  >\n    <Switch>\n      <Route component={HomePage} exact path=\"/\" />\n    </Switch>\n  </Router>\n);\n","export interface IDiceRuleset {\n  name: string;\n  dice: number;\n  discardDice: number;\n  discardSets: number;\n  sets: number;\n}\n\nexport interface IRulesets {\n  [x: string]: IDiceRuleset;\n}\n\nexport const RULESETS: IRulesets = {\n  ROLL_3: {\n    name: 'Roll 6x3',\n    dice: 3,\n    sets: 6,\n    discardDice: 0,\n    discardSets: 0,\n  },\n  ROLL_3_DISCARD_SET: {\n    name: 'Roll 7x3, discard lowest set',\n    dice: 3,\n    sets: 7,\n    discardDice: 0,\n    discardSets: 1,\n  },\n  ROLL_4_DISCARD_1: {\n    name: 'Roll 6x4, discard lowest dice',\n    dice: 4,\n    sets: 6,\n    discardDice: 1,\n    discardSets: 0,\n  },\n};\n\nexport const UTILITIES = {\n  numericSort: (a, b) => (b - a),\n  addNumbers: (acc: number, item: number) => (acc + item),\n};\n","export default (): number => Math.floor(Math.random() * 6) + 1;\n","import { range } from 'lodash';\nimport { IDiceRuleset, UTILITIES } from '~/core/constants';\n\nimport { rollDice } from '../';\n\nconst { numericSort, addNumbers } = UTILITIES;\n\nconst dropLowest = (amount, arr): number[] => {\n  const sorted = arr.sort(numericSort);\n  return sorted.slice(0, sorted.length - amount);\n};\n\nconst rollSingleStat = (diceAmount: number, dropAmount: number): number => {\n  const rolls: number[] = range(0, diceAmount).map(rollDice);\n\n  if (!dropAmount) return rolls.reduce(addNumbers);\n\n  return dropLowest(dropAmount, rolls)\n    .reduce(addNumbers);\n};\n\nexport default (\n  selectedRuleset: IDiceRuleset,\n  selectedRulesetId?: string): number[] => {\n  const {\n    dice,\n    discardDice,\n    discardSets,\n    sets,\n  } = selectedRuleset;\n\n  const rolledSet = range(0, sets).map(item => rollSingleStat(dice, discardDice));\n  if (!discardSets) return rolledSet;\n  return dropLowest(discardSets, rolledSet);\n};\n","import { generate } from 'shortid';\nimport { range } from 'lodash';\nimport { IRulesets, RULESETS } from '~/core/constants';\nimport { ROLL_STATS, CLEAR_ALL_ROLLS, SWITCH_RULE } from '~/actions';\nimport { rollStatBlock } from '~/helpers';\n\nexport interface IStatRolls {\n  [x: string]: number[];\n}\n\nexport interface IDiceReducerState {\n  statRolls: IStatRolls;\n  ruleSets: IRulesets;\n  selectedRule: string;\n}\n\nconst initialState: IDiceReducerState = {\n  statRolls: {},\n  ruleSets: RULESETS,\n  selectedRule: Object.keys(RULESETS)[0],\n};\n\nexport default function (state: IDiceReducerState = initialState, action): IDiceReducerState {\n  const { type, data } = action;\n  switch (type) {\n    case ROLL_STATS: {\n      const rollAmount: number = data;\n      const { selectedRule, ruleSets } = state;\n\n      const statRolls = range(0, rollAmount)\n        .reduce((acc) => {\n          const statBlock = rollStatBlock(ruleSets[selectedRule], selectedRule);\n          const id = generate();\n          return {\n            ...acc,\n            [id]: statBlock,\n          };\n        }, {});\n\n      return {\n        ...state,\n        statRolls: {\n          ...state.statRolls,\n          ...statRolls,\n        },\n      };\n    }\n\n    case SWITCH_RULE: {\n      return {\n        ...state,\n        selectedRule: data,\n      };\n    }\n\n    case CLEAR_ALL_ROLLS: {\n      return {\n        ...state,\n        statRolls: {},\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport diceReducer, { IDiceReducerState } from '~/modules/dice-reducer';\n\nexport interface IApplicationState {\n  diceReducer: IDiceReducerState;\n}\n\nconst initialState = {};\n\nconst rootReducer = (state = initialState, action: any) => {\n  const { type } = action;\n  switch (type) {\n    default:\n      return state;\n  }\n};\n\nexport default (history: any) => combineReducers({\n  rootReducer,\n  diceReducer,\n  router: connectRouter(history),\n});\n","import createEncryptor from 'redux-persist-transform-encrypt';\n\nimport storage from 'redux-persist/lib/storage';\n\nexport const encryptor = createEncryptor({\n  secretKey: 'test-key',\n  onError: () => {\n    localStorage.clear();\n    window.location.reload();\n  },\n});\n\n\nexport const persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [],\n  transforms: [encryptor],\n  throttle: 1000,\n};\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createBrowserHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport createRootReducer from './reducer';\nimport { persistConfig } from './config';\n\nexport const history = createBrowserHistory();\n\n/* Middleware Configuration */\n\nconst logger = createLogger({\n  collapsed: true,\n  level: 'info',\n});\n\n/* Redux Devtools Configuration */\n\nconst options = {};\nconst composeEnhancers = composeWithDevTools(options);\n\nconst getStore = (reducer: any, storeMode: string) => {\n  // Dev store, needs compose enhancers,\n  // Only use redux devtools in dev mode as it is expensive\n  if (storeMode === 'dev') {\n    return createStore(\n      reducer,\n      composeEnhancers(\n        applyMiddleware(\n          routerMiddleware(history), logger\n        )\n      )\n    );\n  }\n  // Prod Store\n  return createStore(\n    reducer,\n    applyMiddleware(\n      routerMiddleware(history)\n    )\n  );\n};\n\ninterface IConfiguredStore {\n  store: any;\n  persistor: any;\n}\n\nexport default function configureStore(mode: 'dev' | 'prod' = 'dev'): IConfiguredStore {\n  const rootReducer = createRootReducer(history);\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n  const store = getStore(persistedReducer, mode);\n  const persistor = persistStore(store, {}, () => {});\n  return { store, persistor };\n}\n\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport Router from '../router';\nimport configureStore, { history } from '../store';\nconst { persistor, store } = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate\n          loading={null}\n          persistor={persistor}\n        >\n          <ConnectedRouter history={history}>\n            <Router />\n          </ConnectedRouter>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// We want to ignore this file completely in TSLint.\n/* tslint:disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './core/app';\nimport * as serviceWorker from './core/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/abilityscore.2d90c836.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.00fb1958.jpg\";"],"sourceRoot":""}