{"version":3,"sources":["pages/home/styles/index.ts","pages/home/helpers/get-roll-obj/index.ts","pages/home/helpers/get-stats-obj/index.ts","pages/home/helpers/stats-calculator/index.ts","components/advanced-table/index.tsx","components/current-roll/styles.ts","components/current-roll/helpers/calculate-point-value/index.ts","components/current-roll/index.tsx","components/select-field/index.tsx","components/stats-display/index.tsx","components/stats-display/styles.ts","pages/home/index.tsx","core/router/index.tsx","core/reducer.ts","core/config.ts","core/store.ts","core/app/index.tsx","core/serviceWorker.ts","index.tsx","assets/background.jpg"],"names":["Row","styled","div","withConfig","displayName","componentId","_ref","even","TablePositioner","PageInnerContent","ButtonsContainer","PageWrapper","PageContainer","background","get_roll_obj","diceAmount","arguments","length","undefined","range","map","sides","Math","floor","random","rollDice","get_stats_obj","item","getRollObj","_default","rolls","Object","classCallCheck","this","avgSingleRolls","totalRolls","totalStatRolls","calculateStats","totalDice","flattenRoll","total","roll","reduce","acc","current","avgSingleRoll","currentStatBlock","AdvancedTable","props","_this","possibleConstructorReturn","getPrototypeOf","call","gridApi","onGridReady","bind","assertThisInitialized","params","api","sizeColumnsToFit","_this$props","columns","rowData","react_default","a","createElement","className","style","height","maxHeight","minHeight","width","main","columnDefs","animateRows","Component","StatsBlock","concat","join","StatsRow","calculate_point_value","oldVal","num","splitNumbers","toString","split","n","parseInt","_splitNumbers","slicedToArray","wholeNumber","roundDown","CurrentRoll","state","name","stat","calculatePointValue","_this2","currentRolls","console","log","keys","key","parsedKey","getName","renderBlock","ComponentName","handleChange","event","onChange","target","value","data","label","_this$props$styles","styles","FormControl_default","objectSpread","display","flex","InputLabel_default","htmlFor","Select_default","MenuItem_default","averageSingleRoll","toFixed","HomePage","ruleOptions","selectedRule","clearRolls","rollMultipleDice","setSelectedRule","setState","fullRoll","getStatsObj","prevState","toConsumableArray","rollAmount","statRow","computedStatBlock","rowRolls","index","b","sort","average","round","StatsCalculator","averageRoll","TOTAL_STAT_ROLLS","TOTAL_DICE_ROLLED","AVERAGE_SINGLE_ROLL","defaultColumnSettings","sortable","resizable","filter","lockPosition","statColumns","headerName","field","otherColumns","displayRolls","getDisplayRolls","getColumns","_this$getStats","getStats","_this$state","Button_default","variant","color","onClick","stats_display_ComponentName","select_field_ComponentName","maxWidth","current_roll_CurrentRoll","advanced_table","router","BrowserRouter","basename","Switch","Route","component","exact","path","initialState","rootReducer","type","core_reducer","history","combineReducers","connectRouter","encryptor","createEncryptor","secretKey","onError","localStorage","clear","window","location","reload","persistConfig","storage","blacklist","transforms","throttle","createBrowserHistory","logger","createLogger","collapsed","level","composeEnhancers","composeWithDevTools","getStore","reducer","storeMode","createStore","applyMiddleware","routerMiddleware","mode","createRootReducer","persistedReducer","persistReducer","store","persistor","persistStore","configureStore","App","es","integration_react","loading","esm","Boolean","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c9c4eb70.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport background from '~/assets/background.jpg';\n\nexport const Row = (styled.div)<{ even?: boolean }>`\n  display: flex;\n  // flex: 1 1 auto;\n  flex-direction: row;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  ${({ even }) => even ? 'justify-content: space-between;' : ''}\n  flex-wrap: wrap;\n`;\n\nexport const TablePositioner = (styled.div)<any>`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  justify-content: flex-start;\n  position: relative;\n  margin-top: 1rem;\n`;\n\nexport const PageInnerContent = (styled.div)<any>`\n  flex: 1;\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ButtonsContainer = (styled.div)<any>`\n  & button {\n    margin: 0.5rem 0.5rem 0 0;\n  }\n\n  &:first-child > button {\n    margin-left: 0;\n  }\n`;\n\nexport const PageWrapper = (styled.div)<any>`\n  background-color: rgba(255,255,255,0.8);\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  max-width: 60vw;\n  margin: 3rem 0;\n  padding: 2rem;\n  border-radius: 0.25rem;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n  // overflow-y: scroll;\n`;\n\nexport const PageContainer = (styled.div)<any>`\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  width: 100%;\n  height: 100vh;\n  justify-content: center;\n  box-sizing: border-box;\n  background: url(${background});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: fixed;\n`;\n","import { range } from 'lodash';\n\nconst rollDice = (sides: number = 6) => {\n  return Math.floor(Math.random() * sides) + 1;\n};\n\nexport default (diceAmount: number = 3): number[] => {\n  return range(0, diceAmount)\n    .map(() => {\n      return rollDice();\n    });\n};\n","import { range } from 'lodash';\nimport { getRollObj } from '../';\n\nexport default (): number[][] => {\n  return range(0, 6).map((item) => {\n    return getRollObj();\n  });\n};\n","export default class {\n  private avgSingleRolls: number = 0;\n  public totalRolls: number;\n  public totalStatRolls: number = 0;\n\n  constructor(private rolls: number[][][]) {\n    this.totalRolls = rolls.length * 6 * 3;\n    this.totalStatRolls = rolls.length;\n    this.calculateStats();\n  }\n\n  private calculateStats(): void {\n    let totalDice = 0;\n\n    const flattenRoll = (total: number, roll: number[]): number => {\n      return total + roll.reduce((acc, current) => {\n        totalDice = totalDice + 1;\n        return acc + current;\n      }, 0);\n    };\n\n    const flattenStatBlock = (total: number, currentStatBlock: number[][]): number => {\n      return total + currentStatBlock.reduce(flattenRoll, 0);\n    };\n\n    const allDiceRolls: number = this.rolls.reduce(flattenStatBlock, 0);\n    const avgSingleRoll = allDiceRolls / totalDice;\n    if (!avgSingleRoll) {\n      this.avgSingleRolls = 0;\n    } else {\n      this.avgSingleRolls = avgSingleRoll;\n    }\n  }\n\n  get averageRoll(): number {\n    return this.avgSingleRolls;\n  }\n}\n","import React, { Component } from 'react';\n\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\ninterface ITableColumn {\n  headerName: string;\n  field: string;\n}\n\ninterface IProps {\n  columns: ITableColumn[];\n  rowData: any[];\n}\n\nclass AdvancedTable extends Component<IProps> {\n  private gridApi: any;\n\n  constructor(props) {\n    super(props);\n\n    this.onGridReady = this.onGridReady.bind(this);\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridApi.sizeColumnsToFit();\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { columns, rowData } = this.props;\n    return (\n      <div\n        className=\"ag-theme-balham\"\n        style={{\n          height: 'auto',\n          maxHeight: '580px',\n          minHeight: '300px',\n          width: '100%',\n        }}\n      >\n        <AgGridReact\n          columnDefs={columns}\n          rowData={rowData}\n          animateRows={true}\n          onGridReady={this.onGridReady}\n        >\n        </AgGridReact>\n      </div>\n    );\n  }\n}\n\nexport default AdvancedTable;\n","import styled from 'styled-components';\n\nconst backgroundUrl = 'https://www.dndbeyond.com/Content/1-0-715-0/Skins/Waterdeep/images/character-sheet/content-frames/abilityscore.svg';\n\n\n\nexport const StatsBlock = (styled.div)`\n  background: ${\n    [\n      'center',\n      'center',\n      'transparent',\n      `url(${backgroundUrl})`,\n    ].join(' ')\n  };\n  background-size: contain;\n  height: 78px;\n  width: 66px;\n\n  .heading {\n    padding-top: 8px;\n    height: 24px;\n    width: 100%;\n    font-size: 12px;\n    line-height: 12px;\n    text-align: center;\n    font-family: Roboto,Helvetica,sans-serif;\n    box-sizing: border-box;\n  }\n\n  .primary {\n    height: 30px;\n    width: 100%;\n    font-size: 22px;\n    line-height: 22px;\n    font-weight: 500;\n    text-align: center;\n    font-family: Roboto,Helvetica,sans-serif;\n    box-sizing: border-box;\n  }\n\n  .secondary {\n    height: 22px;\n    width: 100%;\n    font-family: Roboto,Helvetica,sans-serif;\n    box-sizing: border-box;\n    text-align: center;\n  }\n`;\n\nexport const StatsRow = (styled.div)<any>`\n  height: auto;\n  margin: 0.5rem 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n\n  ${StatsBlock} {\n    margin: 0.25rem 1rem 0.25rem 0;\n  }\n`;\n","const roundDown = (num: number): number => {\n  const splitNumbers: number[] = num.toString().split('.').map(n => parseInt(n, 10));\n  if (splitNumbers.length < 1) return num;\n  const [wholeNumber, fractionNumber] = splitNumbers;\n  const isNegative: boolean = num < 0;\n  return (fractionNumber >= 0 && isNegative) ? wholeNumber - 1 : wholeNumber;\n};\n\nexport default (oldVal: string): string => {\n  const parsedVal: number = parseInt(oldVal, 10);\n  const calVal: number = (parsedVal - 10) / 2;\n  return roundDown(calVal).toString();\n};\n","import React, { Component } from 'react';\nimport {\n  StatsBlock,\n  StatsRow\n} from './styles';\nimport { calculatePointValue } from './helpers';\n\nconst getName = (key: string) => {\n  const parsedKey = parseInt(key, 10);\n  if (!!parsedKey || parsedKey === 0) return `Stat ${(parsedKey + 1).toString()}`;\n  return key;\n};\n\ninterface IProps {\n  currentRolls: number[];\n}\n\ninterface IState {\n  [x: string]: any;\n}\n\nexport default class CurrentRoll extends Component<IProps, IState> {\n  state = {};\n\n  constructor(props) {\n    super(props);\n  }\n\n  renderBlock(name: string, stat: string) {\n    return (\n      <StatsBlock>\n        <div className=\"heading\">\n          {name}\n        </div>\n        <div className=\"primary\">\n          {stat}\n        </div>\n        <div className=\"secondary\">\n          {calculatePointValue(stat)}\n        </div>\n      </StatsBlock>\n    );\n  }\n\n  render() {\n    const { currentRolls } = this.props;\n    console.log(currentRolls);\n    if (!currentRolls) return null;\n    return (\n      <StatsRow>\n        {Object.keys(currentRolls).map((key) => {\n          const name: string = getName(key);\n          return this.renderBlock(name, currentRolls[key]);\n        })}\n      </StatsRow>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\ninterface IDropdownData {\n  key: string;\n  value: string;\n}\n\ninterface IProps {\n  label: string;\n  data: IDropdownData[];\n  value: any;\n  onChange: (...args) => void;\n  styles?: object;\n}\n\ninterface IState {\n  [x: string]: any;\n}\n\nexport default class ComponentName extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { onChange } = this.props;\n    const { target: { value } } = event;\n    onChange(value);\n  }\n\n  render() {\n    const { value, data, label, styles = {} } = this.props;\n    return (\n      <FormControl style={{\n        display: 'flex',\n        flex: '1 1 auto',\n        ...styles,\n      }}>\n        <InputLabel htmlFor=\"age-simple\">{label}</InputLabel>\n        <Select\n          value={value}\n          onChange={this.handleChange}\n        >\n          {data.map(item => (\n            <MenuItem value={item.key}>{item.value}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {} from './styles';\n\ninterface IProps {\n  totalRolls: number;\n  totalStatRolls: number;\n  averageSingleRoll: number;\n}\n\ninterface IState {\n  [x: string]: any;\n}\n\nexport default class ComponentName extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      totalRolls,\n      totalStatRolls,\n      averageSingleRoll,\n    } = this.props;\n\n    return (\n      <div>\n        <h3>Total Stat Rolls: {totalStatRolls}</h3>\n        <h3>Total Dice Rolls: {totalRolls}</h3>\n        <h3>Average Single Roll: {averageSingleRoll.toFixed(2)}</h3>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const StyledComponent = (styled.div)<any>`\n\n`;\n","import React, { Component } from 'react';\nimport { ButtonsContainer, PageContainer, PageInnerContent, PageWrapper, Row, TablePositioner } from './styles';\nimport Button from '@material-ui/core/Button';\nimport { range } from 'lodash';\nimport { getStatsObj, StatsCalculator } from '~/pages/home/helpers';\nimport AdvancedTable from '~/components/advanced-table';\nimport { round } from 'mathjs';\nimport { CurrentRoll, SelectField, StatsDisplay } from '~/components';\n\ninterface IProps {\n  [x: string]: any;\n}\n\ninterface IRuleOption {\n  value: string;\n  key: string;\n}\n\ninterface IState {\n  rolls: number[][][];\n  ruleOptions: IRuleOption[];\n  selectedRule: string;\n}\n\nexport default class HomePage extends Component<IProps, IState> {\n  state = {\n    rolls: [],\n    ruleOptions: [{\n      value: 'Roll 3',\n      key: 'roll_3',\n    }, {\n      value: 'Roll 4, drop lowest',\n      key: 'roll_4',\n    }],\n    selectedRule: 'roll_3',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.rollDice = this.rollDice.bind(this);\n    this.clearRolls = this.clearRolls.bind(this);\n    this.rollMultipleDice = this.rollMultipleDice.bind(this);\n    this.setSelectedRule = this.setSelectedRule.bind(this);\n  }\n\n  setSelectedRule(value: string) {\n    this.setState({\n      selectedRule: value,\n    });\n  }\n\n  rollDice() {\n    const fullRoll = getStatsObj();\n    this.setState((prevState) => {\n      return {\n        rolls: [\n          ...prevState.rolls,\n          fullRoll,\n        ],\n      };\n    });\n  }\n\n  rollMultipleDice(rollAmount: number = 100) {\n    return () => {\n      const rolls = range(0, rollAmount).map(getStatsObj);\n      this.setState((prevState) => {\n        return {\n          rolls: [\n            ...prevState.rolls,\n            ...rolls,\n          ],\n        };\n      });\n    };\n  }\n\n  clearRolls() {\n    this.setState({ rolls: [] });\n  }\n\n  getDisplayRolls() {\n    return this.state.rolls.map((statRow: number[][]) => {\n      const computedStatBlock: number[] = statRow.reduce((acc, rowRolls, index) => {\n        return [\n          ...acc,\n          rowRolls.reduce((a, b) => a + b),\n        ];\n      }, []).sort((a, b) => b - a);\n      const average = round(computedStatBlock.reduce((total, current) => total + current) / 6, 2);\n      return {\n        ...computedStatBlock,\n        average,\n      };\n    });\n  }\n\n  getStats() {\n    const {\n      averageRoll,\n      totalStatRolls,\n      totalRolls,\n    } = new StatsCalculator(this.state.rolls);\n\n    return {\n      TOTAL_STAT_ROLLS: totalStatRolls,\n      TOTAL_DICE_ROLLED: totalRolls,\n      AVERAGE_SINGLE_ROLL: averageRoll,\n    };\n  }\n\n  getColumns() {\n    const defaultColumnSettings = {\n      sortable: true,\n      resizable: true,\n      filter: true,\n      lockPosition: true,\n    };\n    const statColumns = range(0, 6).map(item => ({\n      headerName: `Stat ${item + 1}`,\n      field: item.toString(),\n      ...defaultColumnSettings,\n    }));\n    const otherColumns = [{\n      headerName: 'Average',\n      field: 'average',\n      ...defaultColumnSettings,\n    }];\n    return [\n      ...statColumns,\n      ...otherColumns,\n    ];\n  }\n\n  render() {\n    const displayRolls = this.getDisplayRolls();\n    const columns = this.getColumns();\n    const {\n      TOTAL_STAT_ROLLS,\n      TOTAL_DICE_ROLLED,\n      AVERAGE_SINGLE_ROLL,\n    } = this.getStats();\n    const { selectedRule, ruleOptions } = this.state;\n\n    return (\n      <PageContainer>\n        <PageWrapper>\n          <PageInnerContent>\n            <Row>\n            </Row>\n            <Row even>\n              <div>\n                <h1>Really fair dice roller</h1>\n                <ButtonsContainer>\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.rollDice}>\n                    ROLL!\n                  </Button>\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.rollMultipleDice()}>\n                    ROLL 100!\n                  </Button>\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.clearRolls}>\n                    CLEAR!\n                  </Button>\n                </ButtonsContainer>\n              </div>\n\n              <StatsDisplay\n                totalRolls={TOTAL_DICE_ROLLED}\n                totalStatRolls={TOTAL_STAT_ROLLS}\n                averageSingleRoll={AVERAGE_SINGLE_ROLL}\n              />\n            </Row>\n            <Row>\n              <SelectField\n                onChange={this.setSelectedRule}\n                value={selectedRule}\n                data={ruleOptions}\n                label={'Rolling rule'}\n                styles={{ maxWidth: '250px' }}\n              />\n            </Row>\n            <Row>\n              <CurrentRoll currentRolls={displayRolls[displayRolls.length - 1]}/>\n            </Row>\n            <TablePositioner>\n              <AdvancedTable\n                columns={columns}\n                rowData={displayRolls}\n              />\n            </TablePositioner>\n          </PageInnerContent>\n        </PageWrapper>\n      </PageContainer>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HomePage } from '~/pages';\n\nexport default () => (\n  <Router\n    basename={'/dnd-roller'}\n  >\n    <Switch>\n      <Route component={HomePage} exact path=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\n\nexport interface IApplicationState {\n  [x: string]: any;\n}\n\nconst initialState = {};\n\nconst rootReducer = (state = initialState, action: any) => {\n  const { type } = action;\n  switch (type) {\n    default:\n      return state;\n  }\n};\n\nexport default (history: any) => combineReducers({\n  rootReducer,\n  router: connectRouter(history),\n});\n","import createEncryptor from 'redux-persist-transform-encrypt';\n\nimport storage from 'redux-persist/lib/storage';\n\nexport const encryptor = createEncryptor({\n  secretKey: 'test-key',\n  onError: () => {\n    localStorage.clear();\n    window.location.reload();\n  },\n});\n\n\nexport const persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [],\n  transforms: [encryptor],\n  throttle: 1000,\n};\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createBrowserHistory } from 'history';\nimport { createLogger } from 'redux-logger';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport createRootReducer from './reducer';\nimport { persistConfig } from './config';\n\nexport const history = createBrowserHistory();\n\n/* Middleware Configuration */\n\nconst logger = createLogger({\n  collapsed: true,\n  level: 'info',\n});\n\n/* Redux Devtools Configuration */\n\nconst options = {};\nconst composeEnhancers = composeWithDevTools(options);\n\nconst getStore = (reducer: any, storeMode: string) => {\n  // Dev store, needs compose enhancers,\n  // Only use redux devtools in dev mode as it is expensive\n  if (storeMode === 'dev') {\n    return createStore(\n      reducer,\n      composeEnhancers(\n        applyMiddleware(\n          routerMiddleware(history), logger\n        )\n      )\n    );\n  }\n  // Prod Store\n  return createStore(\n    reducer,\n    applyMiddleware(\n      routerMiddleware(history)\n    )\n  );\n};\n\ninterface IConfiguredStore {\n  store: any;\n  persistor: any;\n}\n\nexport default function configureStore(mode: 'dev' | 'prod' = 'dev'): IConfiguredStore {\n  const rootReducer = createRootReducer(history);\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n  const store = getStore(persistedReducer, mode);\n  const persistor = persistStore(store, {}, () => {});\n  return { store, persistor };\n}\n\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport Router from '../router';\nimport configureStore, { history } from '../store';\nconst { persistor, store } = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate\n          loading={null}\n          persistor={persistor}\n        >\n          <ConnectedRouter history={history}>\n            <Router />\n          </ConnectedRouter>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n// We want to ignore this file completely in TSLint.\n/* tslint:disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './core/app';\nimport * as serviceWorker from './core/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.00fb1958.jpg\";"],"sourceRoot":""}